#name "new_complex.cool"
 OBJECTID class
 OBJECTID Main
 OBJECTID inherits
 OBJECTID IO
 OBJECTID main
 OBJECTID SELF
 OBJECTID TYPE
 OBJECTID let
 OBJECTID c
 OBJECTID Complex
 '-' 
 OBJECTID new
 OBJECTID Complex
 OBJECTID init
 INT_CONST 1
 INT_CONST 1
 OBJECTID in
 OBJECTID if
 OBJECTID c
 OBJECTID reflect
 OBJECTID X
 OBJECTID c
 OBJECTID reflect
 OBJECTID then
 OBJECTID out
 OBJECTID string
 OBJECTID n
 ELSE
 OBJECTID out
 OBJECTID string
 OBJECTID n
 OBJECTID fi
 OBJECTID if
 OBJECTID c
 OBJECTID reflect
 OBJECTID X
 OBJECTID reflect
 OBJECTID Y
 OBJECTID equal
 OBJECTID c
 OBJECTID reflect
 OBJECTID then
 OBJECTID out
 OBJECTID string
 OBJECTID n
 ELSE
 OBJECTID out
 OBJECTID string
 OBJECTID n
 OBJECTID fi
 OBJECTID class
 OBJECTID Complex
 OBJECTID inherits
 OBJECTID IO
 OBJECTID x
 OBJECTID Int
 OBJECTID y
 OBJECTID Int
 OBJECTID init
 OBJECTID a
 OBJECTID Int
 OBJECTID b
 OBJECTID Int
 OBJECTID Complex
 OBJECTID x
 OBJECTID a
 OBJECTID y
 OBJECTID b
 OBJECTID self
 OBJECTID print
 OBJECTID Object
 OBJECTID if
 OBJECTID y
 INT_CONST 0
 OBJECTID then
 OBJECTID out
 OBJECTID int
 OBJECTID x
 ELSE
 OBJECTID out
 OBJECTID int
 OBJECTID x
 OBJECTID out
 OBJECTID string
 OBJECTID out
 OBJECTID int
 OBJECTID y
 OBJECTID out
 OBJECTID string
 OBJECTID I
 OBJECTID fi
 OBJECTID reflect
 OBJECTID Complex
 OBJECTID x
 OBJECTID x
 OBJECTID y
 OBJECTID y
 OBJECTID self
 OBJECTID reflect
 OBJECTID X
 OBJECTID Complex
 OBJECTID y
 OBJECTID y
 OBJECTID self
 OBJECTID reflect
 OBJECTID Y
 OBJECTID Complex
 OBJECTID x
 OBJECTID x
 OBJECTID self
 OBJECTID equal
 OBJECTID d
 OBJECTID Complex
 OBJECTID Bool
 OBJECTID if
 OBJECTID x
 OBJECTID d
 OBJECTID x
 OBJECTID value
 OBJECTID then
 OBJECTID if
 OBJECTID y
 OBJECTID d
 OBJECTID y
 OBJECTID value
 OBJECTID then
 BOOL_CONST true
 ELSE
 OBJECTID false
 OBJECTID fi
 ELSE
 OBJECTID false
 OBJECTID fi
 OBJECTID x
 OBJECTID value
 OBJECTID Int
 OBJECTID x
 OBJECTID y
 OBJECTID value
 OBJECTID Int
 OBJECTID y