#name "atoi.cool"
 OBJECTID The
 OBJECTID class
 OBJECTID A
 OBJECTID I
 OBJECTID provides
 OBJECTID integer
 '-' 
 OBJECTID to
 '-' 
 OBJECTID string
 OBJECTID and
 OBJECTID string
 '-' 
 OBJECTID to
 '-' 
 OBJECTID integer
 OBJECTID conversion
 OBJECTID routines
 OBJECTID To
 OBJECTID use
 OBJECTID these
 OBJECTID routines
 OBJECTID either
 OBJECTID inherit
 OBJECTID them
 OBJECTID in
 OBJECTID the
 OBJECTID class
 OBJECTID where
 OBJECTID needed
 OBJECTID have
 OBJECTID a
 OBJECTID dummy
 OBJECTID variable
 OBJECTID bound
 OBJECTID to
 OBJECTID something
 OBJECTID of
 OBJECTID type
 OBJECTID A
 OBJECTID I
 OBJECTID or
 OBJECTID simpl
 OBJECTID write
 OBJECTID new
 OBJECTID A
 OBJECTID I
 OBJECTID method
 OBJECTID argument
 OBJECTID c
 OBJECTID i
 OBJECTID Converts
 OBJECTID a
 INT_CONST 1
 '-' 
 OBJECTID character
 OBJECTID string
 OBJECTID to
 OBJECTID an
 OBJECTID integer
 OBJECTID Aborts
 OBJECTID if
 OBJECTID the
 OBJECTID string
 OBJECTID is
 OBJECTID not
 INT_CONST 0
 OBJECTID through
 INT_CONST 9
 OBJECTID class
 OBJECTID A
 OBJECTID I
 OBJECTID c
 OBJECTID i
 OBJECTID char
 OBJECTID String
 OBJECTID Int
 OBJECTID if
 OBJECTID char
 INT_CONST 0
 OBJECTID then
 INT_CONST 0
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 1
 OBJECTID then
 INT_CONST 1
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 2
 OBJECTID then
 INT_CONST 2
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 3
 OBJECTID then
 INT_CONST 3
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 4
 OBJECTID then
 INT_CONST 4
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 5
 OBJECTID then
 INT_CONST 5
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 6
 OBJECTID then
 INT_CONST 6
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 7
 OBJECTID then
 INT_CONST 7
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 8
 OBJECTID then
 INT_CONST 8
 ELSE
 OBJECTID if
 OBJECTID char
 INT_CONST 9
 OBJECTID then
 INT_CONST 9
 ELSE
 OBJECTID abort
 INT_CONST 0
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID i
 OBJECTID c
 OBJECTID is
 OBJECTID the
 OBJECTID inverse
 OBJECTID of
 OBJECTID c
 OBJECTID i
 OBJECTID i
 OBJECTID c
 OBJECTID i
 OBJECTID Int
 OBJECTID String
 OBJECTID if
 OBJECTID i
 INT_CONST 0
 OBJECTID then
 INT_CONST 0
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 1
 OBJECTID then
 INT_CONST 1
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 2
 OBJECTID then
 INT_CONST 2
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 3
 OBJECTID then
 INT_CONST 3
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 4
 OBJECTID then
 INT_CONST 4
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 5
 OBJECTID then
 INT_CONST 5
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 6
 OBJECTID then
 INT_CONST 6
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 7
 OBJECTID then
 INT_CONST 7
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 8
 OBJECTID then
 INT_CONST 8
 ELSE
 OBJECTID if
 OBJECTID i
 INT_CONST 9
 OBJECTID then
 INT_CONST 9
 ELSE
 OBJECTID abort
 STR_CONST ""
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID a
 OBJECTID i
 OBJECTID converts
 OBJECTID an
 OBJECTID ASCII
 OBJECTID string
 OBJECTID into
 OBJECTID an
 OBJECTID integer
 OBJECTID The
 OBJECTID empty
 OBJECTID string
 OBJECTID is
 OBJECTID converted
 OBJECTID to
 INT_CONST 0
 OBJECTID Signed
 OBJECTID and
 OBJECTID unsigned
 OBJECTID strings
 OBJECTID are
 OBJECTID handled
 OBJECTID The
 OBJECTID method
 OBJECTID aborts
 OBJECTID if
 OBJECTID the
 OBJECTID string
 OBJECTID does
 OBJECTID not
 OBJECTID represent
 OBJECTID an
 OBJECTID integer
 OBJECTID Very
 OBJECTID long
 OBJECTID strings
 OBJECTID of
 OBJECTID digits
 OBJECTID produce
 OBJECTID strange
 OBJECTID answers
 OBJECTID because
 OBJECTID of
 OBJECTID arithmetic
 OBJECTID overflow
 OBJECTID a
 OBJECTID i
 OBJECTID s
 OBJECTID String
 OBJECTID Int
 OBJECTID if
 OBJECTID s
 OBJECTID length
 INT_CONST 0
 OBJECTID then
 INT_CONST 0
 ELSE
 OBJECTID if
 OBJECTID s
 OBJECTID substr
 INT_CONST 0
 INT_CONST 1
 '-' 
 OBJECTID then
 OBJECTID a
 OBJECTID i
 OBJECTID aux
 OBJECTID s
 OBJECTID substr
 INT_CONST 1
 OBJECTID s
 OBJECTID length
 '-' 
 INT_CONST 1
 ELSE
 OBJECTID if
 OBJECTID s
 OBJECTID substr
 INT_CONST 0
 INT_CONST 1
 OBJECTID then
 OBJECTID a
 OBJECTID i
 OBJECTID aux
 OBJECTID s
 OBJECTID substr
 INT_CONST 1
 OBJECTID s
 OBJECTID length
 '-' 
 INT_CONST 1
 ELSE
 OBJECTID a
 OBJECTID i
 OBJECTID aux
 OBJECTID s
 OBJECTID fi
 OBJECTID fi
 OBJECTID fi
 OBJECTID a
 OBJECTID i
 OBJECTID aux
 OBJECTID converts
 OBJECTID the
 OBJECTID usigned
 OBJECTID portion
 OBJECTID of
 OBJECTID the
 OBJECTID string
 OBJECTID As
 OBJECTID a
 OBJECTID programming
 OBJECTID example
 OBJECTID this
 OBJECTID method
 OBJECTID is
 OBJECTID written
 OBJECTID iteratively
 OBJECTID a
 OBJECTID i
 OBJECTID aux
 OBJECTID s
 OBJECTID String
 OBJECTID Int
 OBJECTID let
 OBJECTID int
 OBJECTID Int
 '-' 
 INT_CONST 0
 OBJECTID in
 OBJECTID let
 OBJECTID j
 OBJECTID Int
 '-' 
 OBJECTID s
 OBJECTID length
 OBJECTID in
 OBJECTID let
 OBJECTID i
 OBJECTID Int
 '-' 
 INT_CONST 0
 OBJECTID in
 OBJECTID while
 OBJECTID i
 OBJECTID j
 OBJECTID loop
 OBJECTID int
 '-' 
 OBJECTID int
 INT_CONST 10
 OBJECTID c
 OBJECTID i
 OBJECTID s
 OBJECTID substr
 OBJECTID i
 INT_CONST 1
 OBJECTID i
 '-' 
 OBJECTID i
 INT_CONST 1
 OBJECTID pool
 OBJECTID int
 OBJECTID i
 OBJECTID a
 OBJECTID converts
 OBJECTID an
 OBJECTID integer
 OBJECTID to
 OBJECTID a
 OBJECTID string
 OBJECTID Positive
 OBJECTID and
 OBJECTID negative
 OBJECTID numbers
 OBJECTID are
 OBJECTID handled
 OBJECTID correctly
 OBJECTID i
 OBJECTID a
 OBJECTID i
 OBJECTID Int
 OBJECTID String
 OBJECTID if
 OBJECTID i
 INT_CONST 0
 OBJECTID then
 INT_CONST 0
 ELSE
 OBJECTID if
 INT_CONST 0
 OBJECTID i
 OBJECTID then
 OBJECTID i
 OBJECTID a
 OBJECTID aux
 OBJECTID i
 ELSE
 '-' 
 OBJECTID concat
 OBJECTID i
 OBJECTID a
 OBJECTID aux
 OBJECTID i
 INT_CONST 1
 OBJECTID fi
 OBJECTID fi
 OBJECTID i
 OBJECTID a
 OBJECTID aux
 OBJECTID is
 OBJECTID an
 OBJECTID example
 OBJECTID using
 OBJECTID recursion
 OBJECTID i
 OBJECTID a
 OBJECTID aux
 OBJECTID i
 OBJECTID Int
 OBJECTID String
 OBJECTID if
 OBJECTID i
 INT_CONST 0
 OBJECTID then
 STR_CONST ""
 ELSE
 OBJECTID let
 OBJECTID next
 OBJECTID Int
 '-' 
 OBJECTID i
 INT_CONST 10
 OBJECTID in
 OBJECTID i
 OBJECTID a
 OBJECTID aux
 OBJECTID next
 OBJECTID concat
 OBJECTID i
 OBJECTID c
 OBJECTID i
 '-' 
 OBJECTID next
 INT_CONST 10
 OBJECTID fi